comment(--RANDOM SQL QUERIES THAT DO NOTHING INTERESTING)
comment(--Copyright (C\) 2009 - Keith Pitt <keith@keithpitt.com>)

comment(--This program is free software: you can redistribute it and/or modify)
comment(--it under the terms of the GNU General Public License as published by)
comment(--the Free Software Foundation, either version 3 of the License, or)
comment(--(at your option\) any later version.)

comment(--This program is distributed in the hope that it will be useful,)
comment(--but WITHOUT ANY WARRANTY; without even the implied warranty of)
comment(--MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the)
comment(--GNU General Public License for more details.)

comment(--You should have received a copy of the GNU General Public License)
comment(--along with this program.  If not, see <http://www.gnu.org/licenses/>.)

reserved(SELECT) operator(*) reserved(FROM) ident(users)operator(;)

reserved(select) operator(*) reserved(from) ident(users)operator(;)

reserved(SELECT) string<delimiter(`)content(First Name)delimiter(`)>operator(,) string<delimiter(`)content(Last Name)delimiter(`)> reserved(FROM) string<delimiter(`)content(User Table)delimiter(`)>operator(;)

reserved(select) ident(first_name)operator(,) ident(last_name) reserved(FROM) ident(users)operator(;)

reserved(select) ident(first_name) operator(|)operator(|) string<delimiter(')content( )delimiter(')> operator(|)operator(|) ident(last_name) reserved(from) ident(users)operator(;)

reserved(select) ident(first_name) operator(|)operator(|) string<delimiter(")content( )delimiter(")> operator(|)operator(|) ident(last_name) reserved(from) ident(users)operator(;)

reserved(SELECT) operator(*) reserved(FROM) ident(users) reserved(JOIN) ident(companies) reserved(USING) operator(()ident(company_id)operator(\)) reserved(WHERE) ident(company_type) operator(=) string<delimiter(')content(Fortune 500)delimiter(')>operator(;)

reserved(SELECT) operator(*) reserved(FROM) ident(users) reserved(WHERE) ident(name_first) reserved(LIKE) string<delimiter(')content(%Keith%)delimiter(')>operator(;)

reserved(SELECT) reserved(CASE) reserved(WHEN) ident(foo)operator(.)ident(bar) operator(=) string<delimiter(')content(PY)delimiter(')>
   reserved(THEN) string<delimiter(')content(BAR)delimiter(')>
   reserved(ELSE) string<delimiter(')content(FOO)delimiter(')>
   reserved(END) reserved(as) ident(bar_type)operator(,)
   ident(user_id)operator(,)
   ident(company_id)operator(,)
   predefined(sum)operator(()
      reserved(case) reserved(when) ident(foo)operator(.)ident(bar) operator(=) string<delimiter(')content(PY)delimiter(')>
      reserved(then) operator(-)ident(amt) reserved(else) ident(amt)
   reserved(end)
   operator(\)) ident(over) operator(()reserved(order) reserved(by) ident(id)operator(,) ident(amt)operator(\)) reserved(as) ident(balance)operator(;)

reserved(SELECT) ident(users)operator(.)operator(*)operator(,) operator(()reserved(SELECT) ident(company_name) reserved(FROM) ident(companies) reserved(WHERE) ident(company_id) operator(=) ident(users)operator(.)ident(company_id)operator(\)) reserved(FROM) ident(users)operator(;)

